name: CI

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build on ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04, macos-13, macos-14, macos-15]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: master
          fetch-depth: 0

      - name: Compile and Test
        run: |
          export CFLAGS="$CFLAGS -O3"
          if [[ "${{ matrix.os }}" == ubuntu-* ]]; then
            sudo apt -qq install gcc-multilib libc6-dev-i386 musl-tools
            export LDFLAGS="$LDFLAGS -static"
            make CHECK=1 CC=musl-gcc
            make clean
          fi
          make CHECK=1 CC=gcc
          make clean
          make CHECK=1 CC=g++
          make clean
          make CHECK=1 CC=clang
          make clean
          make CHECK=1 CC=clang++
          make clean
          if [[ "${{ matrix.os }}" == ubuntu-* ]]; then
            export CFLAGS="$CFLAGS -m32"
          fi
          make CHECK=1
          random_folder="$(mktemp $(printf 'X%.0s' $(seq 1 255)))"
          mkdir -p "./tests/${random_folder}"
          random_file="$(mktemp $(printf 'X%.0s' $(seq 1 255)))"
          random_path="./tests/${random_folder}/${random_file}"
          cp -f ./tests/process_iterator_test "${random_path}"
          echo "${random_path}"
          sudo "${random_path}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@main
        with:
          name: cpulimit-${{ matrix.os }}
          path: src/cpulimit

  build-FreeBSD:
    name: Build on FreeBSD-${{ matrix.osver }}-${{ matrix.arch }}
    permissions:
      contents: read
    strategy:
      matrix:
        osver: ['13.4', '14.2', '15.0']
        arch: ['x86_64', 'aarch64']
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Build on FreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          release: ${{ matrix.osver }}
          arch: ${{ matrix.arch }}
          usesh: true
          prepare: |
            pkg install -y -q gcc llvm gmake sudo
          run: |
            export CFLAGS="$CFLAGS -O3"
            gmake CHECK=1 CC=gcc
            gmake clean
            gmake CHECK=1 CC=g++
            gmake clean
            gmake CHECK=1 CC=clang
            gmake clean
            gmake CHECK=1 CC=clang++
            gmake clean
            gmake CHECK=1
            random_folder="$(mktemp $(printf 'X%.0s' $(seq 1 255)))"
            mkdir -p "./tests/${random_folder}"
            random_file="$(mktemp $(printf 'X%.0s' $(seq 1 255)))"
            random_path="./tests/${random_folder}/${random_file}"
            cp -f ./tests/process_iterator_test "${random_path}"
            echo "${random_path}"
            sudo "${random_path}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@main
        with:
          name: cpulimit-FreeBSD-${{ matrix.osver }}-${{ matrix.arch }}
          path: src/cpulimit
